/* #region common*/
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

:root{
    --primary-blue:var(#255EE9);
    --secondary-blue:var(#8EA1E1);
    --primary-white:var(#FFFFFF);
    --primary-grey:var(#F6F6F6);
    --primary-black:var(#23272A);

}
/* #endregion common*/


/*la prossima volta imposto prima questa regola 

.site_main/.container {
    width: 80%;
    max-width: 1152px;
    margin: auto;
}
per centrare tutto, in questo esercizio ho un esempio di centratura applicata "di container in container". Come mi trovo? per ora rallentata, vediamo se invece nel prossimo esercizio cambia qualcosa impostando la regola di centratura per prima e sviluppando il resto di conseguenza*/


.flex-container {
    display: flex;
    justify-content:center ;
    margin: auto;
}

.flex-container-h {
    display: flex;
    padding: 0.5rem;
    justify-content: space-around;
}

.d-flex{
    display: flex;
}

button{
    border: none;
    box-shadow: inset 0 0 10px 3px rgba(0,0,0,0.3);
}

.p-1{
    padding: 1rem;
}

h3{
    margin-bottom: 2rem;
    font-size: 32px;
}




/*utilities*/



body{
    font-family:'Roboto', sans-serif;
}

.w-900{
font-weight: 900;
}
.w-500{
    font-weight: 500;
    }
/*HEADER*/

#site_header{
    width: 100%;
    height: min-content;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 6;
}



/*con position fixed ho creato sovrapposizione tra jumbotron ed header, quindi posso levare il bg color che avevo dato ad header per compensare la mancanza*/
.logo {
    size: 50px;
    padding-right: 0.75rem;
}
#site_main{

    padding-top: 50px;
}
/*
header{
    background-color: #255EE9;
}*      con position fixed non serve più*/


li{
    text-decoration: none;
    list-style: none;
    color:#FFFFFF;
    flex-direction: column;
    text-wrap: wrap;
    padding: 1rem;

}

.btn-login{
    padding: 7px;
    margin-top: 10px;
    color:#23272A;
    background-color:#FFFFFF;
    border-radius: 40px;
    height: fit-content;
    width: fit-content;
    box-shadow: inset 0 0 10px 3px rgba(0,0,0,0.3);
}
.btn-login:active{
    background-color:#00fa2a;
    border-radius: 50px;
}
.btn-last:active{
    background-color:#00fa2a;
    border-radius: 50px;
}

.btn-login:hover{
    transform: scale(1.5);
}
.btn-last:hover{
    transform: scale(1.5);
}


.align-items-center{
    align-items: center;
}

.wave{
    color: #F6F6F6;
    margin-bottom: -30px;
}

.wave-white{
    color: #F6F6F6;
    transform: rotate(180deg);
    margin-top:-30px;
}

/* il margin bottom negativo lo dò per fixare la linea bianca che resta tra svg, che si comporta come immagine e quindi blocco, e l'altro div successivo*/
/*JUMBOTRON*/

.jumbotron{
    height: 450px;
    background-image: url(./img/jumbo.png);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    text-align: center;
    background-color:#255EE9;
}

.jumbotron .flex-container {
    padding: 2.75rem 12rem;
    margin: 0 14.75rem;
    color: #FFFFFF;
}

.jumbotron h2{
    font-size: 2.5rem;
    margin-bottom: 2rem;
   
}


.jumbotron p{
    line-height: 1.5rem;
    margin-bottom: 2rem;
}

.jumbotron button{
    padding: 16px;
    margin-top: 10px;
    color:#23272A;
    background-color:#FFFFFF;
    border-radius: 40px;
    font-size: 17px;
    color: #23272A;
    box-shadow: inset 0 0 10px 3px rgba(0,0,0,0.3);
}

.flex-container button:last-child{
    background-color: #23272A;
    color:#FFFFFF;
    box-shadow: inset 0 0 10px 3px rgba(196, 191, 191, 0.849);
}
/* FIRST CONTAINER*/

.row1{
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
}

div.row1{
    width: 80%;
}

.row1 img.d-flex{
    animation-name: slidein;
    animation-duration: 5s;
}


@keyframes slidein {
    from {
      transform: translateX(-50%);
    }
  
    to {
      transform: translateX(0%);
    }
  }


span.chat {
    transition: 3s;
    padding: 2rem;
}  
span.chat:hover {
    border: 10px inset #292841;
}

span.chiamata {
    transition: 3s;
    padding: 2rem;
}  
span.chiamata:hover {
    border: 10px inset #292841;
}

span.fandom {
    transition: 3s;
    padding: 2rem;
}  
span.fandom:hover {
    border: 10px inset #292841;
}
/*SECOND CONTAINER*/

.row2{
    display: flex;
    flex-direction:row;
    align-items: center;
}

.flex-container .row2{
    background-color: #F6F6F6;
}

div.row2{
    width: 100%;
    padding: 4rem 17rem;
}

[class$="erse"]{
    animation-name: slidereverse;
    animation-duration: 5s;

}
@keyframes slidereverse {
    from {
      transform: translateX(110%);
    }
  
    to {
      transform: translateX(0%);
    }
  }

 

/*THIRD CONTAINER*/

.last{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 4rem 13rem;
}

.flex-container .last{
    background-color: #F6F6F6;
    width: 100%;
}


h4{
    font-weight: 900;
    font-size: 18px;
}


#l-button{
    background-color: #8EA1E1;
    border-radius: 40px;
    padding: 1rem;
    margin-top: 1.75rem
}

.column{
    flex-direction: column;
    }


/*FOOTER*/
.top-footer{
    display: flex;
    width: 80%;
    justify-content: center;
}

footer{
    background-color: #23272A;
    padding-top: 1.75rem;
}

.colonna-g{
    width: 100% ;

}
.colonna-p{
    width:  calc((100% / 12) * 4 );
}

[class^="col"] p{
    color: #8EA1E1;
    font-family: 'Roboto', sans-serif;
    font-weight: 900;
    font-size: 18px;
}
[class^="col"] li{
    color: #FFFFFF;
    font-family: 'Roboto', sans-serif;
    font-weight: 500;
    font-size: 15px;    
}

[class^="col"] div{
    color: #FFFFFF;
    font-family: 'Roboto', sans-serif;
    font-weight: 500;
    font-size: 15px;  
    margin-bottom: 5px;  
}
.colonna-g h2{
    font-size: 30px;
    color: #8EA1E1;
    margin-bottom: 1.75rem;
}

/*BOTTOM FOOTER*/


.bottom-footer:first-child{
    justify-content: space-between;
    width: 80%;
}

div.flex-container{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}


.btn-last{
    padding: 7px;
    margin-top: 10px;
    color:#FFFFFF;
    background-color: #8EA1E1;
    border-radius: 40px;
    height: fit-content;
    width: fit-content;
        box-shadow: inset 0 0 10px 3px rgba(0,0,0,0.3);
}

hr{
    margin: 0 7rem;
    background-color: #8EA1E1;
    height: 2px;
    border: none;
}


img:not(.d-flex){
    height: 15px;
}

a[href^="#"]{
    color: #F6F6F6;
    padding: 0.75rem;
}
/* #region debug*/ 


.debug .jumbotron{
    background-color: rgb(246, 60, 91);
    height: 15rem;
    border: dotted;
}
.debug .row1{
    background-color: violet;
    height: 15rem;
    border: dotted;
}
.debug .row2{
    background-color:#ededed;
    height: 15rem;
    border: dotted;
}
.debug .col-4 {
    border: dotted;
    background-color: blue;
}
.debug .col-12 {
    border: dotted;
    background-color: brown;
}
.debug .flex-container:nth-child(2){
    background-color: orange;
}
.debug .flex-container:nth-child(4){
    background-color: orange;
}
.debug .last{
    
    background-color: rgb(68, 128, 48);
    height: 20rem;
    border: dotted;
}
.debug .top-footer{
    height: 15rem;
    border: dotted;
    flex-direction: row;
}
.debug .colonna-g{
    border: dotted;
    background-color: blue;
}
.debug .colonna-p {
    border: dotted;
    background-color: brown;
}
.debug .site_footer{
    background-color: #ededed;
}
.debug .logo-f {
    border: 5px dotted rgb(50, 73, 205);
    width: 10%;
    background-color: rgb(247, 172, 34);
}
.debug .bottone {
    border: 5px dotted rgb(50, 73, 205);
    width: 10%;
    background-color: rgb(247, 172, 34);
}
.debug .bottom-footer{
    background-color: black;

}
/* #endregion debug*/

